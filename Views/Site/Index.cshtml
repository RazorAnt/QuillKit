@model QuillKit.Models.ViewModels.PaginatedViewModel<QuillKit.Models.Post>

@{
    ViewData["Title"] = "Home";
    var categoryName = ViewData["CategoryName"] as string;
    var postCount = ViewData["PostCount"] as int?;
}

<div class="row">
    <!-- Main Content Area -->
    <div class="col-lg-9">
        
        @if (!string.IsNullOrEmpty(categoryName))
        {
            <div class="mb-4">
                <h2 class="category-header">
                    <i class="bi bi-folder2-open"></i> @categoryName
                    <small class="text-muted">(@postCount posts)</small>
                </h2>
                <hr>
            </div>
        }
        
        <div class="row">
            @foreach (var post in Model.Items)
            {
                <div class="col-md-6 mb-4">
                    <article class="card h-100">
                        @if (!string.IsNullOrEmpty(post.Image))
                        {
                            <div style="height: 200px; overflow: hidden;">
                                <img src="@post.Image" class="card-img-top" alt="@post.Title" style="height: 100%; width: 100%; object-fit: cover;">
                            </div>
                        }
                        <div class="card-body d-flex flex-column">
                            @if (post.Type == PostType.Post)
                            {
                                <h4 class="card-title">
                                    <a href="@Url.Action("Post", "Site", new { slug = post.Slug })">
                                        @post.Title
                                    </a>
                                </h4>
                                
                                <div class="post-meta mb-2">
                                    <i class="bi bi-calendar3"></i>@post.PubDate.ToString("MMM dd, yyyy")
                                </div>
                                
                                @if (!string.IsNullOrEmpty(post.Excerpt))
                                {
                                    <p class="card-text">@post.Excerpt</p>
                                }
                                else
                                {
                                    <p class="card-text">Click to read more...</p>
                                }
                            }
                            else if (post.Type == PostType.Page)
                            {
                                <h5 class="card-title">
                                    <a href="@Url.Action("Page", "Site", new { slug = post.Slug })">
                                        @post.Title
                                    </a>
                                </h5>
                                <div class="post-meta mb-2">
                                    <i class="bi bi-file-text"></i>Page
                                </div>
                            }
                            
                            <div class="mt-auto">
                                @if (post.Categories.Any())
                                {
                                    <span class="badge bg-light">@post.Categories.First()</span>
                                }
                            </div>
                        </div>
                    </article>
                </div>
            }
        </div>
        
        <!-- Pagination -->
        @if (Model.ShowPagination)
        {
            <nav aria-label="Blog pagination" class="mt-4">
                <ul class="pagination justify-content-center">
                    <!-- Previous Page -->
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            @if (!string.IsNullOrEmpty(categoryName))
                            {
                                <a class="page-link" href="@Url.Action("Category", new { category = categoryName, page = Model.PreviousPage })">Previous</a>
                            }
                            else
                            {
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.PreviousPage })">Previous</a>
                            }
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">Previous</span>
                        </li>
                    }
                    
                    <!-- Page Numbers -->
                    @{
                        int startPage = Math.Max(1, Model.CurrentPage - 2);
                        int endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                    }
                    
                    @if (startPage > 1)
                    {
                        <li class="page-item">
                            @if (!string.IsNullOrEmpty(categoryName))
                            {
                                <a class="page-link" href="@Url.Action("Category", new { category = categoryName, page = 1 })">1</a>
                            }
                            else
                            {
                                <a class="page-link" href="@Url.Action("Index", new { page = 1 })">1</a>
                            }
                        </li>
                        @if (startPage > 2)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        }
                    }
                    
                    @for (int i = startPage; i <= endPage; i++)
                    {
                        @if (i == Model.CurrentPage)
                        {
                            <li class="page-item active">
                                <span class="page-link">@i</span>
                            </li>
                        }
                        else
                        {
                            <li class="page-item">
                                @if (!string.IsNullOrEmpty(categoryName))
                                {
                                    <a class="page-link" href="@Url.Action("Category", new { category = categoryName, page = i })">@i</a>
                                }
                                else
                                {
                                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                }
                            </li>
                        }
                    }
                    
                    @if (endPage < Model.TotalPages)
                    {
                        @if (endPage < Model.TotalPages - 1)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        }
                        <li class="page-item">
                            @if (!string.IsNullOrEmpty(categoryName))
                            {
                                <a class="page-link" href="@Url.Action("Category", new { category = categoryName, page = Model.TotalPages })">@Model.TotalPages</a>
                            }
                            else
                            {
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.TotalPages })">@Model.TotalPages</a>
                            }
                        </li>
                    }
                    
                    <!-- Next Page -->
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            @if (!string.IsNullOrEmpty(categoryName))
                            {
                                <a class="page-link" href="@Url.Action("Category", new { category = categoryName, page = Model.NextPage })">Next</a>
                            }
                            else
                            {
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.NextPage })">Next</a>
                            }
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">Next</span>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>

    <!-- Sidebar -->
    <div class="col-lg-3">
        <div class="sidebar">
            @await Html.PartialAsync("_Sidebar")
        </div>
    </div>
</div>
